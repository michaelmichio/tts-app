services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    volumes:
      - ./data/pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  backend:
    build: ./backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      APP_ENV: production
      PORT: 8080
      DB_DSN: postgres://postgres:postgres@db:5432/app?sslmode=disable
      JWT_SECRET: change_this_to_a_long_random_secret_value
      JWT_TTL_HOURS: "24"
      MEDIA_DIR: /data/media
      CORS_ORIGINS: https://srv986885.hstgr.cloud
    expose:
      - "8080"
    volumes:
      - ./data/media:/data/media
      - ./docs:/app/docs:ro
    restart: unless-stopped

  caddy:
    image: caddy:2-alpine
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/usr/share/app:ro
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped

volumes:
  caddy_data:
  caddy_config:


  # web:
  #   image: nginx:alpine
  #   depends_on:
  #     - backend
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./frontend/dist:/usr/share/nginx/html:ro
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
  #   healthcheck:
  #     test: ["CMD-SHELL", "wget -qO- http://localhost/ | grep -qi '<!doctype html>'"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 10
  #   restart: unless-stopped

  # --- Optional: dev-only ---
  # frontend:
  #   image: node:20-alpine
  #   working_dir: /app
  #   command: sh -lc "npm ci && npm run dev -- --host 0.0.0.0"
  #   ports:
  #     - "5173:5173"
  #     - "24678:24678"
  #   environment:
  #     VITE_API_URL: http://localhost:8080
  #   volumes:
  #     - ./frontend:/app
